#!/bin/bash
#annihilate your workspace junk
#github.com/matthewd673/nuke-em

VICTIMFILE="nukethis.txt"

if [ "$1" == "-r" ]
    then
        > nukethis.txt
        echo "targets (nukethis.txt) cleared"
fi
if [ "$1" == "-n" ]
    then
        if [ "$2" != "" ]
            then
                echo "$2" >> nukethis.txt
                echo "type $2 added"
        fi
        if [ "$2" == "" ]
            then
                echo "failed! next time input something (nuke -n [string value])"
        fi
fi
if [ "$1" != "-n" ] && [ "$1" != "-r" ]
    then
        #confirm they want to nuke the stuff
        
        entryct=0
        
        while read line; do
                    
            for entry in "$PWD"/*
            do
                if [[ "$entry" == *"$line"* ]]
                    then
                        let "entryct += 1"
                fi
            done
                    
        done < $VICTIMFILE
        
        echo -e "continue with wipe ($entryct files)? (y/n)"
        read confirmwipe
        
        #check confirmation
        if [ "$confirmwipe" == "y" ]
            then
                #continue with the wipe
                #read the file line by line
                #check for matching files
                while read line; do
                    
                    for entry in "$PWD"/*
                    do
                        if [[ "$entry" == *"$line"* ]]
                            then
                                rm $entry
                        fi
                    done
                        
                done < $VICTIMFILE
                echo "BOOM! ($entryct files deleted)"
        fi
                
        if [ "$confirmwipe" == "n" ]
            then
                #don't go through with it
                echo "detonation cancelled"
        fi
                
        if [ "$confirmwipe" != "y" ] && [ "$confirmwipe" != "n" ]
            then
                #not valid input
                echo "failed! next time, input either a [y] or an [n]"
        fi
        
        
fi
